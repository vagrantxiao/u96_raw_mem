// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="write_mem_write_mem,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.190000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5522,HLS_SYN_LUT=8960,HLS_VERSION=2022_2}" *)

module axi_offset #(
      parameter DEC_S_ADDR      = 0 // slave ADDR is decreased by this value
    , parameter INC_M_ADDR      = 64'h0000_0000_0000_0000 // malster ADDR is increased by this value
)(
      input          ap_clk
    , input          ap_rst_n

    , output [63:0]  m_axi_rmem0_ARADDR
    , output  [1:0]  m_axi_rmem0_ARBURST
    , output  [3:0]  m_axi_rmem0_ARCACHE
    , output  [0:0]  m_axi_rmem0_ARID
    , output  [7:0]  m_axi_rmem0_ARLEN
    , output         m_axi_rmem0_ARLOCK
    , output  [2:0]  m_axi_rmem0_ARPROT
    , output  [3:0]  m_axi_rmem0_ARQOS
    , input          m_axi_rmem0_ARREADY
    , output  [2:0]  m_axi_rmem0_ARSIZE
    , output         m_axi_rmem0_ARVALID
    , output [63:0]  m_axi_rmem0_AWADDR
    , output  [1:0]  m_axi_rmem0_AWBURST
    , output  [3:0]  m_axi_rmem0_AWCACHE
    , output  [0:0]  m_axi_rmem0_AWID
    , output  [7:0]  m_axi_rmem0_AWLEN
    , output         m_axi_rmem0_AWLOCK
    , output  [2:0]  m_axi_rmem0_AWPROT
    , output  [3:0]  m_axi_rmem0_AWQOS
    , input          m_axi_rmem0_AWREADY
    , output  [2:0]  m_axi_rmem0_AWSIZE
    , output         m_axi_rmem0_AWVALID
    , input   [0:0]  m_axi_rmem0_BID
    , output         m_axi_rmem0_BREADY
    , input   [1:0]  m_axi_rmem0_BRESP
    , input          m_axi_rmem0_BVALID
    , input [255:0]  m_axi_rmem0_RDATA
    , input   [0:0]  m_axi_rmem0_RID
    , input          m_axi_rmem0_RLAST
    , output         m_axi_rmem0_RREADY
    , input   [1:0]  m_axi_rmem0_RRESP
    , input          m_axi_rmem0_RVALID
    , output [255:0] m_axi_rmem0_WDATA
    , output         m_axi_rmem0_WLAST
    , input          m_axi_rmem0_WREADY
    , output  [31:0] m_axi_rmem0_WSTRB
    , output         m_axi_rmem0_WVALID

    , input   [63:0] s_axi_rmem0_ARADDR
    , input    [1:0] s_axi_rmem0_ARBURST
    , input    [3:0] s_axi_rmem0_ARCACHE
    , input    [0:0] s_axi_rmem0_ARID
    , input    [7:0] s_axi_rmem0_ARLEN
    , input          s_axi_rmem0_ARLOCK
    , input    [2:0] s_axi_rmem0_ARPROT
    , input    [3:0] s_axi_rmem0_ARQOS
    , output         s_axi_rmem0_ARREADY
    , input    [2:0] s_axi_rmem0_ARSIZE
    , input          s_axi_rmem0_ARVALID
    , input   [63:0] s_axi_rmem0_AWADDR
    , input    [1:0] s_axi_rmem0_AWBURST
    , input    [3:0] s_axi_rmem0_AWCACHE
    , input    [0:0] s_axi_rmem0_AWID
    , input    [7:0] s_axi_rmem0_AWLEN
    , input          s_axi_rmem0_AWLOCK
    , input    [2:0] s_axi_rmem0_AWPROT
    , input    [3:0] s_axi_rmem0_AWQOS
    , output         s_axi_rmem0_AWREADY
    , input    [2:0] s_axi_rmem0_AWSIZE
    , input          s_axi_rmem0_AWVALID
    , output   [0:0] s_axi_rmem0_BID
    , input          s_axi_rmem0_BREADY
    , output   [1:0] s_axi_rmem0_BRESP
    , output         s_axi_rmem0_BVALID
    , output [255:0] s_axi_rmem0_RDATA
    , output   [0:0] s_axi_rmem0_RID
    , output         s_axi_rmem0_RLAST
    , input          s_axi_rmem0_RREADY
    , output   [1:0] s_axi_rmem0_RRESP
    , output         s_axi_rmem0_RVALID
    , input  [255:0] s_axi_rmem0_WDATA
    , input          s_axi_rmem0_WLAST
    , output         s_axi_rmem0_WREADY
    , input   [31:0] s_axi_rmem0_WSTRB
    , input          s_axi_rmem0_WVALID
);

assign m_axi_rmem0_ARADDR  = s_axi_rmem0_ARADDR + INC_M_ADDR - DEC_S_ADDR;
assign m_axi_rmem0_ARBURST = s_axi_rmem0_ARBURST;
assign m_axi_rmem0_ARCACHE = s_axi_rmem0_ARCACHE;
assign m_axi_rmem0_ARID    = s_axi_rmem0_ARID;
assign m_axi_rmem0_ARLEN   = s_axi_rmem0_ARLEN;
assign m_axi_rmem0_ARLOCK  = s_axi_rmem0_ARLOCK;
assign m_axi_rmem0_ARPROT  = s_axi_rmem0_ARPROT;
assign m_axi_rmem0_ARQOS   = s_axi_rmem0_ARQOS;
assign m_axi_rmem0_ARSIZE  = s_axi_rmem0_ARSIZE;
assign m_axi_rmem0_ARVALID = s_axi_rmem0_ARVALID;
assign m_axi_rmem0_AWADDR  = s_axi_rmem0_AWADDR + INC_M_ADDR - DEC_S_ADDR;
assign m_axi_rmem0_AWBURST = s_axi_rmem0_AWBURST;
assign m_axi_rmem0_AWCACHE = s_axi_rmem0_AWCACHE;
assign m_axi_rmem0_AWID    = s_axi_rmem0_AWID;
assign m_axi_rmem0_AWLEN   = s_axi_rmem0_AWLEN;
assign m_axi_rmem0_AWLOCK  = s_axi_rmem0_AWLOCK;
assign m_axi_rmem0_AWPROT  = s_axi_rmem0_AWPROT;
assign m_axi_rmem0_AWQOS   = s_axi_rmem0_AWQOS;
assign m_axi_rmem0_AWSIZE  = s_axi_rmem0_AWSIZE;
assign m_axi_rmem0_AWVALID = s_axi_rmem0_AWVALID;
assign m_axi_rmem0_BREADY  = s_axi_rmem0_BREADY;
assign m_axi_rmem0_RREADY  = s_axi_rmem0_RREADY;
assign m_axi_rmem0_WDATA   = s_axi_rmem0_WDATA;
assign m_axi_rmem0_WLAST   = s_axi_rmem0_WLAST;
assign m_axi_rmem0_WSTRB   = s_axi_rmem0_WSTRB;
assign m_axi_rmem0_WVALID  = s_axi_rmem0_WVALID;

assign s_axi_rmem0_ARREADY = m_axi_rmem0_ARREADY;
assign s_axi_rmem0_AWREADY = m_axi_rmem0_AWREADY;
assign s_axi_rmem0_BID     = m_axi_rmem0_BID;
assign s_axi_rmem0_BRESP   = m_axi_rmem0_BRESP;
assign s_axi_rmem0_BVALID  = m_axi_rmem0_BVALID;
assign s_axi_rmem0_RDATA   = m_axi_rmem0_RDATA;
assign s_axi_rmem0_RID     = m_axi_rmem0_RID;
assign s_axi_rmem0_RLAST   = m_axi_rmem0_RLAST;
assign s_axi_rmem0_RRESP   = m_axi_rmem0_RRESP;
assign s_axi_rmem0_RVALID  = m_axi_rmem0_RVALID;
assign s_axi_rmem0_WREADY  = m_axi_rmem0_WREADY;


endmodule //axi_offset
